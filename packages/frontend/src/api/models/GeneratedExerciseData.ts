/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FullABCDE } from './FullABCDE';
import {
    FullABCDEFromJSON,
    FullABCDEFromJSONTyped,
    FullABCDEToJSON,
} from './FullABCDE';
import type { FullVitalSigns } from './FullVitalSigns';
import {
    FullVitalSignsFromJSON,
    FullVitalSignsFromJSONTyped,
    FullVitalSignsToJSON,
} from './FullVitalSigns';
import type { FutureState } from './FutureState';
import {
    FutureStateFromJSON,
    FutureStateFromJSONTyped,
    FutureStateToJSON,
} from './FutureState';
import type { PatientBasicInfo } from './PatientBasicInfo';
import {
    PatientBasicInfoFromJSON,
    PatientBasicInfoFromJSONTyped,
    PatientBasicInfoToJSON,
} from './PatientBasicInfo';

/**
 * 
 * @export
 * @interface GeneratedExerciseData
 */
export interface GeneratedExerciseData {
    /**
     * 
     * @type {string}
     * @memberof GeneratedExerciseData
     */
    patientName: string;
    /**
     * 
     * @type {PatientBasicInfo}
     * @memberof GeneratedExerciseData
     */
    basicInfo: PatientBasicInfo;
    /**
     * 
     * @type {string}
     * @memberof GeneratedExerciseData
     */
    simulationInstructions: string;
    /**
     * 
     * @type {string}
     * @memberof GeneratedExerciseData
     */
    backgroundInformation: string;
    /**
     * 
     * @type {FullVitalSigns}
     * @memberof GeneratedExerciseData
     */
    vitalSigns: FullVitalSigns;
    /**
     * 
     * @type {FullABCDE}
     * @memberof GeneratedExerciseData
     */
    aBCDE: FullABCDE;
    /**
     * 
     * @type {FutureState}
     * @memberof GeneratedExerciseData
     */
    future: FutureState;
}

/**
 * Check if a given object implements the GeneratedExerciseData interface.
 */
export function instanceOfGeneratedExerciseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "patientName" in value;
    isInstance = isInstance && "basicInfo" in value;
    isInstance = isInstance && "simulationInstructions" in value;
    isInstance = isInstance && "backgroundInformation" in value;
    isInstance = isInstance && "vitalSigns" in value;
    isInstance = isInstance && "aBCDE" in value;
    isInstance = isInstance && "future" in value;

    return isInstance;
}

export function GeneratedExerciseDataFromJSON(json: any): GeneratedExerciseData {
    return GeneratedExerciseDataFromJSONTyped(json, false);
}

export function GeneratedExerciseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneratedExerciseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'patientName': json['patientName'],
        'basicInfo': PatientBasicInfoFromJSON(json['basicInfo']),
        'simulationInstructions': json['simulationInstructions'],
        'backgroundInformation': json['backgroundInformation'],
        'vitalSigns': FullVitalSignsFromJSON(json['vitalSigns']),
        'aBCDE': FullABCDEFromJSON(json['ABCDE']),
        'future': FutureStateFromJSON(json['future']),
    };
}

export function GeneratedExerciseDataToJSON(value?: GeneratedExerciseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'patientName': value.patientName,
        'basicInfo': PatientBasicInfoToJSON(value.basicInfo),
        'simulationInstructions': value.simulationInstructions,
        'backgroundInformation': value.backgroundInformation,
        'vitalSigns': FullVitalSignsToJSON(value.vitalSigns),
        'ABCDE': FullABCDEToJSON(value.aBCDE),
        'future': FutureStateToJSON(value.future),
    };
}

