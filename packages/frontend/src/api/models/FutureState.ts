/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FullABCDE } from './FullABCDE';
import {
    FullABCDEFromJSON,
    FullABCDEFromJSONTyped,
    FullABCDEToJSON,
} from './FullABCDE';
import type { FullVitalSigns } from './FullVitalSigns';
import {
    FullVitalSignsFromJSON,
    FullVitalSignsFromJSONTyped,
    FullVitalSignsToJSON,
} from './FullVitalSigns';

/**
 * 
 * @export
 * @interface FutureState
 */
export interface FutureState {
    /**
     * 
     * @type {string}
     * @memberof FutureState
     */
    events: string;
    /**
     * 
     * @type {FullVitalSigns}
     * @memberof FutureState
     */
    vitalSigns: FullVitalSigns;
    /**
     * 
     * @type {FullABCDE}
     * @memberof FutureState
     */
    aBCDE: FullABCDE;
}

/**
 * Check if a given object implements the FutureState interface.
 */
export function instanceOfFutureState(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "events" in value;
    isInstance = isInstance && "vitalSigns" in value;
    isInstance = isInstance && "aBCDE" in value;

    return isInstance;
}

export function FutureStateFromJSON(json: any): FutureState {
    return FutureStateFromJSONTyped(json, false);
}

export function FutureStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): FutureState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'events': json['events'],
        'vitalSigns': FullVitalSignsFromJSON(json['vitalSigns']),
        'aBCDE': FullABCDEFromJSON(json['ABCDE']),
    };
}

export function FutureStateToJSON(value?: FutureState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'events': value.events,
        'vitalSigns': FullVitalSignsToJSON(value.vitalSigns),
        'ABCDE': FullABCDEToJSON(value.aBCDE),
    };
}

