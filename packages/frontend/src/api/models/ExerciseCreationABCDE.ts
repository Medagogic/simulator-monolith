/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExerciseCreationABCDE
 */
export interface ExerciseCreationABCDE {
    /**
     * 
     * @type {string}
     * @memberof ExerciseCreationABCDE
     */
    a: string;
    /**
     * 
     * @type {string}
     * @memberof ExerciseCreationABCDE
     */
    b: string;
    /**
     * 
     * @type {string}
     * @memberof ExerciseCreationABCDE
     */
    c: string;
    /**
     * 
     * @type {string}
     * @memberof ExerciseCreationABCDE
     */
    d: string;
    /**
     * 
     * @type {string}
     * @memberof ExerciseCreationABCDE
     */
    e: string;
}

/**
 * Check if a given object implements the ExerciseCreationABCDE interface.
 */
export function instanceOfExerciseCreationABCDE(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "a" in value;
    isInstance = isInstance && "b" in value;
    isInstance = isInstance && "c" in value;
    isInstance = isInstance && "d" in value;
    isInstance = isInstance && "e" in value;

    return isInstance;
}

export function ExerciseCreationABCDEFromJSON(json: any): ExerciseCreationABCDE {
    return ExerciseCreationABCDEFromJSONTyped(json, false);
}

export function ExerciseCreationABCDEFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExerciseCreationABCDE {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'a': json['A'],
        'b': json['B'],
        'c': json['C'],
        'd': json['D'],
        'e': json['E'],
    };
}

export function ExerciseCreationABCDEToJSON(value?: ExerciseCreationABCDE | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'A': value.a,
        'B': value.b,
        'C': value.c,
        'D': value.d,
        'E': value.e,
    };
}

