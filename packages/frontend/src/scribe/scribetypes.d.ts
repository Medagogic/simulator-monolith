/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Timestamp = number;
export type Content = string;
export type Type = string;
export type NpcId = string | null;
export type Timestamp1 = number;
export type Content1 = string;
export type Type1 = string;
export type NpcId1 = string;
export type IVAccessLocation = "left hand" | "right hand";
export type IvAccess = IVAccessParams[];
export type IOAccessLocation = "proximal tibia" | "distal tibia" | "distal femur";
/**
 * Gauge of needle, eg "18G", "20G", "22G"
 */
export type NeedleSize = string;
export type IOBodySide = "left" | "right";
export type IoAccess = IOAccessParams[];
export type EkgConnected = boolean;
/**
 * Type of probe used, e.g., "Finger", "Earlobe", "Foot"
 */
export type ProbePosition = string;
/**
 * Ventilation mode, e.g., "AC", "PC", "PSV"
 */
export type Mode = string;
/**
 * Fraction of Inspired Oxygen, a value between 0.21 and 1.0
 */
export type Fio2 = number;
export type Advice = string[];
export type Id = string;
export type Name = string;
export type Role = string;
export type Specialities = string[];
export type YearsOfExperience = number;
export type CurrentTask = string | null;
/**
 * The body temperature in degrees Celsius or Fahrenheit
 */
export type Temperature = number | null;
/**
 * The heart rate in beats per minute
 */
export type HeartRate = number | null;
/**
 * The number of breaths taken per minute
 */
export type RespiratoryRate = number | null;
export type Systolic = number;
export type Diastolic = number;
/**
 * The blood glucose level
 */
export type BloodGlucose = number | null;
/**
 * The oxygen saturation in percentage
 */
export type OxygenSaturation = number | null;
/**
 * The capillary refill time in seconds
 */
export type CapillaryRefill = number | null;
export type Timestamp2 = number;
export type NpcName = string;
export type Content2 = string;
export type Type2 = string;
export type Log = CombatLogElement[];
export type NpcId2 = string;
export type NpcName1 = string;
export type About = string | null;
export type Timestamp3 = number;
export type Content3 = string;
export type Type3 = string;
export type TargetNpcId = string | null;
export type Timestamp4 = number;
export type Content4 = string;
export type Type4 = string;
export type NpcId3 = string | null;
export type Timestamp5 = number;
export type Content5 = string;
export type Type5 = string;
export type NpcId4 = string;
export type Messages = (Evt_Chat_HumanMessage | Evt_Chat_Event1 | Evt_Chat_NPCMessage1)[];
export type ExerciseTimeSeconds = number;
export type Timestamp6 = number;
export type Content6 = string;
export type Type6 = string;
export type TargetNpcId1 = string | null;

export interface ScribeEvents {
  chat_event: Evt_Chat_Event;
  chat_message: Evt_Chat_NPCMessage;
  device_update: SIO_ConnectedDevices;
  dr_clippy_update: DrClippyOutput;
  npc_data: SIO_NPCData;
  patient_vitals_update: ExposedVitalSigns;
  combatlog_update: CombatLogUpdateData;
  npc_thinking_updated: NPCThinking;
  full_chat_history: SIO_ChatHistory;
  time_update: SIO_TimeUpdate;
  __server_on_join_session?: {
    session_id?: {
      [k: string]: unknown;
    };
  };
  __server_on_leave_session?: {};
  __server_on_chat_message?: {
    data?: Evt_Chat_HumanMessage1;
    return?: {
      [k: string]: unknown;
    };
  };
  __server_on_direct_intervention?: {
    function_call?: {
      [k: string]: unknown;
    };
    return?: {
      [k: string]: unknown;
    };
  };
}
export interface Evt_Chat_Event {
  timestamp?: Timestamp;
  content: Content;
  type?: Type;
  npc_id?: NpcId;
}
export interface Evt_Chat_NPCMessage {
  timestamp?: Timestamp1;
  content: Content1;
  type?: Type1;
  npc_id: NpcId1;
}
export interface SIO_ConnectedDevices {
  iv_access?: IvAccess;
  io_access?: IoAccess;
  ekg_connected: EkgConnected;
  nibp?: NIBPMonitorParams | null;
  pulse_ox?: PulseOximeterParams | null;
  ventilator?: VentilatorParams | null;
  continuous_glucometer?: ContinuousGlucometerParams | null;
}
export interface IVAccessParams {
  location: IVAccessLocation;
  [k: string]: unknown;
}
export interface IOAccessParams {
  location: IOAccessLocation;
  needle_size?: NeedleSize;
  /**
   * Side of body, e.g., "left", "right"
   */
  side?: IOBodySide;
  [k: string]: unknown;
}
export interface NIBPMonitorParams {
  [k: string]: unknown;
}
export interface PulseOximeterParams {
  probe_position: ProbePosition;
  [k: string]: unknown;
}
export interface VentilatorParams {
  mode: Mode;
  fio2: Fio2;
  [k: string]: unknown;
}
export interface ContinuousGlucometerParams {
  [k: string]: unknown;
}
export interface DrClippyOutput {
  advice?: Advice;
}
export interface SIO_NPCData {
  id: Id;
  definition: NPCDefinition;
  current_task?: CurrentTask;
}
export interface NPCDefinition {
  name: Name;
  role: Role;
  specialities: Specialities;
  years_of_experience: YearsOfExperience;
  [k: string]: unknown;
}
export interface ExposedVitalSigns {
  temperature?: Temperature;
  heart_rate?: HeartRate;
  respiratory_rate?: RespiratoryRate;
  /**
   * Blood pressure measurements
   */
  blood_pressure?: BloodPressureModel | null;
  blood_glucose?: BloodGlucose;
  oxygen_saturation?: OxygenSaturation;
  capillary_refill?: CapillaryRefill;
}
export interface BloodPressureModel {
  systolic: Systolic;
  diastolic: Diastolic;
  [k: string]: unknown;
}
export interface CombatLogUpdateData {
  log: Log;
}
export interface CombatLogElement {
  timestamp: Timestamp2;
  npc_name: NpcName;
  content: Content2;
  type: Type2;
  [k: string]: unknown;
}
export interface NPCThinking {
  npc_id: NpcId2;
  npc_name: NpcName1;
  about?: About;
}
export interface SIO_ChatHistory {
  messages: Messages;
}
export interface Evt_Chat_HumanMessage {
  timestamp?: Timestamp3;
  content: Content3;
  type?: Type3;
  target_npc_id?: TargetNpcId;
  [k: string]: unknown;
}
export interface Evt_Chat_Event1 {
  timestamp?: Timestamp4;
  content: Content4;
  type?: Type4;
  npc_id?: NpcId3;
  [k: string]: unknown;
}
export interface Evt_Chat_NPCMessage1 {
  timestamp?: Timestamp5;
  content: Content5;
  type?: Type5;
  npc_id: NpcId4;
  [k: string]: unknown;
}
export interface SIO_TimeUpdate {
  exercise_time_seconds: ExerciseTimeSeconds;
}
export interface Evt_Chat_HumanMessage1 {
  timestamp?: Timestamp6;
  content: Content6;
  type?: Type6;
  target_npc_id?: TargetNpcId1;
}
